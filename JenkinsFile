pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven 3.9.6"
    }

    parameters{
        choice(choices: ['chrome', 'firefox', 'edge'], name: 'BROWSER')
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/snuffit/SauceDemo.git'

                // Run Maven on a Unix agent.
                sh "mvn clean test -Dbrowser=${params.BROWSER}"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                always {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    allure includeProperties: false, jdk: '', results: [[path: 'target/allure-results']]
                    emailext(
                                subject: '${PROJECT_NAME} - Build #${BUILD_NUMBER} - ${BUILD_STATUS}',
                                body: '''<p>${PROJECT_NAME} - Build #${BUILD_NUMBER} - ${BUILD_STATUS}</p>
                                        <p>Проверить сборку: <a href="${BUILD_URL}">${BUILD_URL}</a></p>
                                        <p>Длительность: ${BUILD_DURATION}</p>
                                        <p>Изменения: ${CHANGES}</p>''',
                                to: 'team@example.com',
                                attachLog: true,
                                compressLog: true
                            )
                }
            }
        }
    }
}
